const translations = {
  es: {
    "About Me": "👤 Sobre mí",
    "Skills": "🛠️ Habilidades",
    "Projects": "📂 Proyectos",
    "See the Projects in Action": "🎥 Ver los proyectos en acción",
    "Contact": "📞 Contacto",
    "Feel free to reach out via:": "📬 No dudes en ponerte en contacto a través de:",
    "Email": "📧 Correo electrónico",
    "GitHub": "🐙 GitHub",
    "LinkedIn": "🔗 LinkedIn",
    "American Translators Association": "📜 Asociación Americana de Traductores",
    "Software Developer": "💻 Desarrollador de Software, Traductor e Intérprete",
    "Hi, I am @Daancoria": "👋 Hola, soy @Daancoria",
    "I am interested in game development, Python projects, building interactive applications, and languages translation and interpretation.":
      "🎮 Estoy interesado en el desarrollo de juegos, proyectos en Python, creación de aplicaciones interactivas y traducción e interpretación de idiomas.",
    "Currently working on Pygame, Kivy, and state management for web applications, mobile apps, games and much more.":
      "💡 Actualmente trabajando en Pygame, Kivy y gestión de estados para aplicaciones web, aplicaciones móviles, juegos y mucho más.",
    "Looking to collaborate on open-source game projects, quiz applications, and creative coding challenges.":
      "🤝 Buscando colaborar en proyectos de juegos de código abierto, aplicaciones de cuestionarios y desafíos de programación creativa.",
    "Fun fact: I love building logic-based games, tweaking mechanics to make gameplay feel just right, and exploring new languages!":
      "🎲 Dato curioso: ¡Me encanta crear juegos basados en lógica, ajustar mecánicas para que el juego sea perfecto y explorar nuevos idiomas!",
    "Dungeon Crawler": "Juego de calabozo",
    "Dungeon Crawler Description": "Estoy emocionado de presentar mi juego Dungeon Crawler, una aventura retro desarrollada completamente en Python usando Pygame.",
    "Dungeon Crawler Features": "⚔️ Explora un laberinto generado proceduralmente lleno de tesoros ocultos, paredes destructibles y enemigos inteligentes.",
    "Dungeon Crawler Bombs": "💣 Elige entre cinco tipos diferentes de bombas, cada una con un efecto único.",
    "Dungeon Crawler Skills": "🛠️ Desarrollé experiencia en programación orientada a objetos, diseño de arte pixelado e implementación de IA.",
    "Dungeon Crawler Conclusion": "🎮 Si te gustan los gráficos ochenteros combinados con ingenio moderno, este proyecto es para ti.",
    "Tetris": "Tetrix",
    "Tetris Description": "Después de sumergirme en el desarrollo de juegos con Pygame/Kivy, ¡he creado un juego clásico de Tetris desde cero!",
    "Tetris Skills Mastered": "💡 Habilidades dominadas:",
    "Tetris Mechanics": "🔹 Mecánicas y lógica del juego – Implementación de detección de colisiones, rotación de piezas y mecánicas de limpieza de líneas.",
    "Tetris State Management": "🔹 Gestión de estados – Manejo de estados del juego como ejecución, pausa y condiciones de fin de juego.",
    "Tetris Procedural Generation": "🔹 Generación procedural – Piezas de Tetrimino aleatorias mientras se asegura un juego equilibrado.",
    "Tetris Rendering": "🔹 Renderizado y animación – Transiciones suaves y movimiento basado en cuadrículas para una experiencia atractiva.",
    "Tetris User Interaction": "🔹 Interacción del usuario – Integración de entradas de teclado/ratón para un juego receptivo.",
    "Tetris Optimization": "🔹 Optimización – Rendimiento fluido y código estructurado para escalabilidad.",
    "Tetris Conclusion": "Este proyecto fue un desafío emocionante y una gran adición a mi portafolio de desarrollo de juegos.",
    "Flappy-ish Bird": "Flappy-ish Bird",
    "Flappy-ish Bird Description": "¡Emocionado de compartir mi proyecto de desarrollo de juegos—Flappy-ish Bird, una versión divertida del clásico Flappy Bird, construido completamente con Python y Pygame!",
    "Flappy-ish Bird Skills Demonstrated": "🛠️ Habilidades demostradas:",
    "Flappy-ish Bird Physics": "✅ Desarrollo de juegos con Pygame – Implementación de física, detección de colisiones y animaciones de sprites.",
    "Flappy-ish Bird State Management": "✅ Gestión de estados – Manejo de estados del juego, menús y entrada del usuario.",
    "Flappy-ish Bird Randomization": "✅ Aleatorización – Fondos dinámicos y colores de tuberías para una experiencia fresca cada vez.",
    "Flappy-ish Bird User Interaction": "✅ Interacción del usuario – Un menú de selección de color de pájaro para mejorar la participación del jugador.",
    "Flappy-ish Bird Optimization": "✅ Optimización del rendimiento – Renderizado eficiente y juego fluido a 30 FPS.",
    "Flappy-ish Bird Features": "🖥️ Características:",
    "Flappy-ish Bird Customization": "🎨 Selección personalizable de pájaros – Elige entre pájaros rojos, azules o amarillos.",
    "Flappy-ish Bird Dynamic Environments": "🌄 Entornos dinámicos – Los fondos cambian entre día y noche aleatoriamente.",
    "Flappy-ish Bird Pipe Variations": "🚧 Variaciones de tuberías – Las tuberías alternan entre verde y rojo.",
    "Flappy-ish Bird Gameplay": "🎮 Jugabilidad clásica de Flappy – Mecánicas simples pero adictivas.",
    "Sudoku": "Sudoku",
    "Sudoku Description": "Recientemente programé un juego de Sudoku en Python (usando Pygame) como un proyecto rápido para mejorar mi pensamiento lógico/algorítmico y habilidades de manejo de eventos en tiempo real.",
    "Sudoku Highlights": "Aspectos destacados:",
    "Sudoku Features": "• Puzzles generados automáticamente y un solucionador correspondiente.",
    "Sudoku Mistakes": "• Hasta 3 errores permitidos (¡luego se acaba el juego!).",
    "Sudoku Pause": "• Pausa y reanudación fáciles – el temporizador se detiene mientras está en pausa.",
    "Sudoku Night Mode": "• Modo nocturno para sesiones nocturnas.",
    "Sudoku Hints": "• Pistas y resolución automática para esos puntos difíciles.",
    "Sudoku Difficulty": "• Cambia instantáneamente entre Fácil, Medio y Difícil.",
    "Sudoku UI": "• Ventana redimensionable y UI adaptativa.",
    "Python": "Python",
    "Pygame": "Pygame",
    "HTML/CSS": "HTML/CSS",
    "JavaScript": "JavaScript",
    "Git/GitHub": "Git/GitHub",
    "Game development": "Desarrollo de juegos",
    "Object-oriented programming": "Programación orientada a objetos",
    "Responsive design": "Diseño adaptable",
    "Problem-solving": "Resolución de problemas",
    "English": "Inglés",
    "Spanish": "Español",
    "French": "Francés",
    "Italian": "Italiano",
    "See the Games in Action": "Ve los juegos en acción",
    "Video Not Supported": "Tu navegador no soporta el video.",
    "Footer": "© 2025 Daniel Anievas Coria",
    "Alien Invasion Game": "👾 Juego de Invasión Alienígena",
    "Alien Invasion Description": "🌌 Un emocionante juego de disparos en el espacio donde defiendes la Tierra de oleadas de invasores alienígenas. Desarrollado con Python y Pygame.",
    "Alien Invasion Features": "🛸 Características: Niveles progresivos, enemigos dinámicos y un sistema de puntuación.",
    "Alien Invasion Skills": "🛠️ Habilidades demostradas: Programación orientada a objetos, diseño de niveles y animaciones de sprites.",
    "Pokemon API Integration": "🎮 Integración de la API de Pokémon",
    "Pokemon API Description": "🔍 Una aplicación interactiva que utiliza la API de Pokémon para mostrar información detallada sobre tus Pokémon favoritos.",
    "Pokemon API Features": "📋 Características: Búsqueda por nombre, estadísticas detalladas y una interfaz amigable.",
    "Pokemon API Skills": "🛠️ Habilidades demostradas: Consumo de API REST, manejo de datos JSON y diseño de interfaces dinámicas.",
    "Alien Invasion Smooth Controls": "Controles suaves de la nave con movimiento multidireccional",
    "Alien Invasion Dynamic Fleet": "Una flota alienígena dinámica que reacciona a los bordes de la pantalla",
    "Alien Invasion Bullet Firing": "Disparo de balas con límites y detección de colisiones",
    "Alien Invasion Score System": "Seguimiento de puntuación y sistema de vidas",
    "Alien Invasion Game States": "Estados del juego: inicio, pausa, fin del juego y reinicio",
    "Alien Invasion Custom Sprites": "Sprites personalizados y fondo para una sensación pulida",
    "Alien Invasion Tech Stack": "💻 Pila tecnológica:",
    "Alien Invasion Tech Details": "Python | Pygame | Diseño OOP",
    "Alien Invasion Conclusion": "🎯 Esta fue una gran oportunidad para profundizar en bucles de juego, manejo de eventos, gestión de sprites y mecánicas de colisión. Además, implementar una base de código modular hizo que iterar fuera un placer.",
    "Pokemon API Async": "JavaScript asíncrono (async/await): Manejo fluido de llamadas a la API y obtención de datos con manejo adecuado de errores para garantizar una experiencia de usuario sin problemas.",
    "Pokemon API DOM Manipulation": "Manipulación del DOM: Actualización dinámica del contenido de la página sin recargas utilizando JavaScript nativo para crear una interfaz atractiva.",
    "Pokemon API Fetch": "Fetch API: Integración de fuentes de datos de terceros y manejo efectivo de respuestas de API.",
    "Pokemon API Clean Code": "Código limpio y mantenible: Énfasis en claridad, modularidad y lógica amigable para el usuario para garantizar legibilidad y escalabilidad.",
    "Pokemon API Responsive Design": "Diseño web adaptable: Estilizado con CSS para garantizar la usabilidad en diferentes tamaños de pantalla y dispositivos.",
    "Pokemon API Error Handling": "Retroalimentación al usuario y manejo de errores: Implementación de mensajes significativos y estados de respaldo para entradas inválidas o fallos en llamadas a la API.",
    "Pokemon API Final Note": "💡 Es un gran ejemplo de cómo llevar datos externos a una interfaz elegante mientras se mantiene el rendimiento y la usabilidad en mente.",
    "Trivia with React": "Trivia con React",
    "Trivia React Description": "🧠 Una aplicación de trivia tipo cuestionario construida con React que obtiene preguntas de la API Open Trivia DB.",
    "Trivia React Features": "🎯 Características como selección de categoría, filtros de dificultad, seguimiento de puntuación y transiciones suaves entre componentes.",
    "Trivia React Skills": "🛠️ Manejo de estado en React (useState/useEffect), estructura de componentes, paso de props y obtención asíncrona de datos.",
    "Trivia React Conclusion": "📚 Este proyecto demuestra dominio del frontend y enfoque en UX en un formato de trivia atractivo—¡perfecto para los amantes de los quizzes!",
    "E-commerce API": "API de Comercio Electrónico",
    "E-commerce API Description": "🛒 Una API RESTful backend construida para una tienda ficticia usando Python y FastAPI.",
    "E-commerce API Features": "⚙️ Soporta listado de productos, autenticación de usuarios, carrito de compras y gestión de pedidos.",
    "E-commerce API Skills": "🧰 Habilidades demostradas en diseño de API, gestión de rutas, interacción con bases de datos usando SQLAlchemy y autenticación segura de usuarios.",
    "E-commerce API Conclusion": "📦 Este proyecto destaca capacidades backend completas adecuadas para servicios web escalables.",
    "E-commerce Product Listing": "Listado de Productos E-commerce",
    "E-commerce Product Listing Description": "🛍️ Una elegante y divertida aplicación web de listado de productos inspirada en Pokémon, construida con HTML, CSS y JavaScript.",
    "E-commerce Product Listing Features": "🧾 Muestra una lista dinámica de Pokémon como productos con IDs únicos, búsqueda en tiempo real y diseño responsive.",
    "E-commerce Product Listing Skills": "🎨 Destaca la manipulación del DOM, integración asíncrona de API, diseño en cuadrícula y una interfaz limpia.",
    "E-commerce Product Listing Conclusion": "📱 Un prototipo funcional y entretenido de e-commerce que demuestra técnicas prácticas de frontend sin frameworks.",
    "Marvel Character Explorer": "Explorador de Personajes de Marvel",
    "Marvel Character Explorer Description": "🦸 Una aplicación web que permite explorar información sobre personajes del universo Marvel utilizando la API de Marvel.",
    "Marvel Character Explorer Features": "🧬 Búsqueda por nombre de superhéroe, navegación por tarjetas, detalles de personajes y diseño responsive.",
    "Marvel Character Explorer Skills": "🛠️ Habilidades demostradas: consumo de API pública de Marvel, manejo de eventos en DOM, promesas y manejo de errores en JavaScript.",
    "Marvel Character Explorer Conclusion": "📚 Un proyecto ideal para quienes desean conectar frontend con APIs potentes en un entorno divertido y familiar.",
    "Event Center": "Centro de Eventos",
    "Event Center Description": "🎟️ Un proyecto de varias páginas usando HTML/CSS/JavaScript que muestra un sitio web completamente responsivo para un centro de eventos, con navegación y manejo de formularios.",
    "Event Center Features": "📋 Páginas incluidas: Inicio (con banner y Sobre Nosotros), Eventos (con detalles estructurados), Menú (tabla de elementos), Ubicación (con mapa incrustado) y Contacto (formulario con validación).",
    "Event Center Skills": "🛠️ Habilidades demostradas: diseño responsivo, HTML semántico, diseño con Flexbox/Grid, validación de formularios en el cliente, media queries y vinculación entre páginas.",
    "Event Center Requirements": "✅ Requisitos del Proyecto Cumplidos:",
    "Event Center Nav": "Barra de navegación en todas las páginas",
    "Event Center Hero": "• Imagen principal, mensaje de bienvenida y eventos destacados en la página de inicio",
    "Event Center Semantic": "• Uso de 'article' y 'section' para los eventos",
    "Event Center Menu": "• Menú en formato tabla con categorías",
    "Event Center Map": "• Mapa incrustado en la página de ubicación",
    "Event Center Form": "• Formulario de contacto validado",
    "Event Center Responsive": "• Diseño responsivo con CSS grid/flexbox y efectos hover",
    "Event Center Conclusion": "📌 Un proyecto inspirado en el mundo real centrado en la organización del diseño, la usabilidad y la adaptabilidad para una experiencia multipágina.",
    "Advanced React E-commerce": "Advanced React E-commerce",
    "Advanced React E-commerce Intro": "🛍️ Plataforma de comercio electrónico escalable con React, Redux Toolkit, Firebase y TypeScript, diseñada para brindar experiencias fluidas de compra.",
    "Advanced React E-commerce Auth": "🔐 Autenticación: Registro/inicio de sesión seguro con Firebase Authentication y gestión de sesiones con Redux Toolkit.",
    "Advanced React E-commerce User": "👤 Gestión de usuario: Edición y eliminación de perfiles con sincronización en tiempo real usando Firestore.",
    "Advanced React E-commerce Cart": "🛒 Carrito inteligente: Añadir, actualizar y gestionar cantidades de productos con funcionalidades conectadas a Firestore.",
    "Advanced React E-commerce Products": "📦 Control de productos y administrador: Administración CRUD desde Firestore, con importación desde FakeStoreAPI.",
    "Advanced React E-commerce Orders": "🧾 Historial de pedidos: Visualización completa de compras anteriores con ID, fecha y productos.",
    "Advanced React E-commerce Tech": "🛠️ Stack: React, Redux Toolkit, Firebase (Auth + Firestore), React Router, TypeScript, React Toastify.",
    "Task Manager App": "Task Manager App",
    "Task Manager App Intro": "✅ Una aplicación de productividad moderna con React, TypeScript y Auth0—diseñada para que los usuarios gestionen sus tareas de forma eficiente.",
    "Task Manager App Core": "📋 Funciones principales: Panel con filtros, ordenamiento, búsqueda, detalles de tareas y edición. Rutas protegidas con Auth0.",
    "Task Manager App Model": "🗂️ Modelo de tareas avanzado: Subtareas, tareas recurrentes, recordatorios, notas enriquecidas y tiempo estimado.",
    "Task Manager App Calendar": "📅 Calendario interactivo: Vista mensual/semanal/diaria con tareas arrastrables y botón modal de creación.",
    "Task Manager App UI": "🎨 Interfaz moderna: Diseño responsivo, modo oscuro, animaciones y formularios con validación y estilo modular.",
    "Task Manager App Tech": "🛠️ Stack: React + Vite, TypeScript, Auth0, Context API, React Router, React Big Calendar.",
  },
  fr: {
    "About Me": "👤 À propos de moi",
    "Skills": "🛠️ Compétences",
    "Projects": "📂 Projets",
    "See the Projects in Action": "🎥 Voir les projets en action",
    "Contact": "📞 Contact",
    "Feel free to reach out via:": "📬 N'hésitez pas à me contacter via :",
    "Email": "📧 E-mail",
    "GitHub": "🐙 GitHub",
    "LinkedIn": "🔗 LinkedIn",
    "American Translators Association": "📜 Association Américaine des Traducteurs",
    "Software Developer": "💻 Développeur de logiciels, traducteur et interprète",
    "Hi, I am @Daancoria": "👋 Bonjour, je suis @Daancoria",
    "I am interested in game development, Python projects, building interactive applications, and languages translation and interpretation.":
      "🎮 Je m'intéresse au développement de jeux, aux projets Python, à la création d'applications interactives et à la traduction et l'interprétation de langues.",
    "Currently working on Pygame, Kivy, and state management for web applications, mobile apps, games and much more.":
      "💡 Actuellement en train de travailler sur Pygame, Kivy et la gestion d'état pour les applications web, les applications mobiles, les jeux et bien plus encore.",
    "Looking to collaborate on open-source game projects, quiz applications, and creative coding challenges.":
      "🤝 Je cherche à collaborer sur des projets de jeux open-source, des applications de quiz et des défis de programmation créative.",
    "Fun fact: I love building logic-based games, tweaking mechanics to make gameplay feel just right, and exploring new languages!":
      "🎲 Fait amusant : J'adore créer des jeux basés sur la logique, ajuster les mécaniques pour que le gameplay soit parfait et explorer de nouvelles langues !",
    "Dungeon Crawler": "Explorateur de Donjons",
    "Dungeon Crawler Description": "Je suis ravi de présenter mon jeu Dungeon Crawler, une aventure rétro développée entièrement en Python avec Pygame.",
    "Dungeon Crawler Features": "⚔️ Explorez un labyrinthe généré procéduralement rempli de trésors cachés, de murs destructibles et d'ennemis astucieux.",
    "Dungeon Crawler Bombs": "💣 Choisissez parmi cinq types de bombes différents, chacun offrant une stratégie unique.",
    "Dungeon Crawler Skills": "🛠️ J'ai acquis de l'expérience en programmation orientée objet, en conception d'art pixelisé et en implémentation d'IA.",
    "Dungeon Crawler Conclusion": "🎮 Si vous aimez les graphismes nostalgiques combinés à l'ingéniosité moderne, ce projet est fait pour vous.",
    "Tetris": "Tetris",
    "Tetris Description": "Après m'être plongé dans le développement de jeux avec Pygame/Kivy, j'ai créé un jeu classique de Tetris de A à Z !",
    "Tetris Skills Mastered": "💡 Compétences maîtrisées :",
    "Tetris Mechanics": "🔹 Mécaniques et logique du jeu – Implémentation de la détection des collisions, rotation des pièces et mécaniques de nettoyage des lignes.",
    "Tetris State Management": "🔹 Gestion des états – Gestion des états du jeu tels que l'exécution, la pause et les conditions de fin de jeu.",
    "Tetris Procedural Generation": "🔹 Génération procédurale – Pièces de Tetrimino aléatoires tout en assurant un jeu équilibré.",
    "Tetris Rendering": "🔹 Rendu et animation – Transitions fluides et mouvement basé sur une grille pour une expérience attrayante.",
    "Tetris User Interaction": "🔹 Interaction utilisateur – Intégration des entrées clavier/souris pour un jeu réactif.",
    "Tetris Optimization": "🔹 Optimisation – Performance fluide et code structuré pour l'évolutivité.",
    "Tetris Conclusion": "Ce projet a été un défi passionnant et une excellente addition à mon portfolio de développement de jeux.",
    "Flappy-ish Bird": "Flappy-ish Bird",
    "Flappy-ish Bird Description": "Je suis ravi de partager mon projet de développement de jeux—Flappy-ish Bird, une version amusante du classique Flappy Bird, entièrement construit avec Python et Pygame !",
    "Flappy-ish Bird Skills Demonstrated": "🛠️ Compétences démontrées :",
    "Flappy-ish Bird Physics": "✅ Développement de jeux avec Pygame – Implémentation de la physique, détection des collisions et animations de sprites.",
    "Flappy-ish Bird State Management": "✅ Gestion des états – Gestion des états du jeu, des menus et des entrées utilisateur.",
    "Flappy-ish Bird Randomization": "✅ Aléatorisation – Arrière-plans dynamiques et couleurs des tuyaux pour une expérience fraîche à chaque fois.",
    "Flappy-ish Bird User Interaction": "✅ Interaction utilisateur – Un menu de sélection de couleur d'oiseau pour améliorer l'engagement du joueur.",
    "Flappy-ish Bird Optimization": "✅ Optimisation des performances – Rendu efficace et jeu fluide à 30 FPS.",
    "Flappy-ish Bird Features": "🖥️ Caractéristiques :",
    "Flappy-ish Bird Customization": "🎨 Sélection personnalisable d'oiseaux – Choisissez parmi des oiseaux rouges, bleus ou jaunes.",
    "Flappy-ish Bird Dynamic Environments": "🌄 Environnements dynamiques – Les arrière-plans changent entre jour et nuit aléatoirement.",
    "Flappy-ish Bird Pipe Variations": "🚧 Variations des tuyaux – Les tuyaux alternent entre vert et rouge.",
    "Flappy-ish Bird Gameplay": "🎮 Jouabilité classique de Flappy – Mécaniques simples mais addictives.",
    "Sudoku": "Sudoku",
    "Sudoku Description": "J'ai récemment programmé un jeu de Sudoku en Python (avec Pygame) comme projet rapide pour améliorer ma pensée logique/algorithmique et mes compétences de gestion des événements en temps réel.",
    "Sudoku Highlights": "Points forts :",
    "Sudoku Features": "• Puzzles générés automatiquement et un solveur correspondant.",
    "Sudoku Mistakes": "• Jusqu'à 3 erreurs permises (puis c'est game over !).",
    "Sudoku Pause": "• Pause et reprise faciles – le chronomètre s'arrête pendant la pause.",
    "Sudoku Night Mode": "• Mode nuit pour les sessions nocturnes.",
    "Sudoku Hints": "• Indices et résolution automatique pour ces points difficiles.",
    "Sudoku Difficulty": "• Changez instantanément entre Facile, Moyen et Difficile.",
    "Sudoku UI": "• Fenêtre redimensionnable et UI adaptative.",
    "Python": "Python",
    "Pygame": "Pygame",
    "HTML/CSS": "HTML/CSS",
    "JavaScript": "JavaScript",
    "Git/GitHub": "Git/GitHub",
    "Game development": "Développement de jeux",
    "Object-oriented programming": "Programmation orientée objet",
    "Responsive design": "Conception adaptative",
    "Problem-solving": "Résolution de problèmes",
    "English": "Anglais",
    "Spanish": "Espagnol",
    "French": "Français",
    "Italian": "Italien",
    "See the Games in Action": "Voir les jeux en action",
    "Video Not Supported": "Votre navigateur ne prend pas en charge la vidéo.",
    "Footer": "© 2025 Daniel Anievas Coria",
    "Alien Invasion Game": "👾 Jeu d'Invasion Alien",
    "Alien Invasion Description": "🌌 Un jeu de tir spatial palpitant où vous défendez la Terre contre des vagues d'envahisseurs extraterrestres. Développé avec Python et Pygame.",
    "Alien Invasion Features": "🛸 Caractéristiques : Niveaux progressifs, ennemis dynamiques et système de score.",
    "Alien Invasion Skills": "🛠️ Compétences démontrées : Programmation orientée objet, conception de niveaux et animations de sprites.",
    "Pokemon API Integration": "🎮 Intégration de l'API Pokémon",
    "Pokemon API Description": "🔍 Une application interactive utilisant l'API Pokémon pour afficher des informations détaillées sur vos Pokémon préférés.",
    "Pokemon API Features": "📋 Caractéristiques : Recherche par nom, statistiques détaillées et interface conviviale.",
    "Pokemon API Skills": "🛠️ Compétences démontrées : Consommation d'API REST, gestion des données JSON et conception d'interfaces dynamiques.",
    "Alien Invasion Smooth Controls": "Contrôles fluides du vaisseau avec mouvement multidirectionnel",
    "Alien Invasion Dynamic Fleet": "Une flotte alien dynamique qui réagit aux bords de l'écran",
    "Alien Invasion Bullet Firing": "Tir de balles avec limites et détection des collisions",
    "Alien Invasion Score System": "Suivi des scores et système de vies",
    "Alien Invasion Game States": "États du jeu : démarrage, pause, fin de jeu et redémarrage",
    "Alien Invasion Custom Sprites": "Sprites personnalisés et arrière-plan pour une sensation soignée",
    "Alien Invasion Tech Stack": "💻 Pile technologique :",
    "Alien Invasion Tech Details": "Python | Pygame | Conception OOP",
    "Alien Invasion Conclusion": "🎯 Ce fut une excellente opportunité pour approfondir les boucles de jeu, la gestion des événements, la gestion des sprites et les mécaniques de collision. De plus, la mise en œuvre d'une base de code modulaire a rendu l'itération agréable.",
    "Pokemon API Async": "JavaScript asynchrone (async/await) : Gestion fluide des appels API et récupération des données avec une gestion appropriée des erreurs pour garantir une expérience utilisateur fluide.",
    "Pokemon API DOM Manipulation": "Manipulation du DOM : Mise à jour dynamique du contenu de la page sans rechargement en utilisant JavaScript natif pour créer une interface attrayante.",
    "Pokemon API Fetch": "Fetch API : Intégration de sources de données tierces et gestion efficace des réponses API.",
    "Pokemon API Clean Code": "Code propre et maintenable : Accent mis sur la clarté, la modularité et une logique conviviale pour garantir lisibilité et évolutivité.",
    "Pokemon API Responsive Design": "Conception web réactive : Stylisé avec CSS pour garantir l'utilisabilité sur différentes tailles d'écran et appareils.",
    "Pokemon API Error Handling": "Retour utilisateur et gestion des erreurs : Mise en œuvre de messages significatifs et d'états de secours pour les entrées invalides ou les échecs d'appels API.",
    "Pokemon API Final Note": "💡 C'est un excellent exemple de la façon d'intégrer des données externes dans une interface élégante tout en gardant à l'esprit les performances et l'utilisabilité.",
    "Trivia with React": "Trivia avec React",
    "Trivia React Description": "🧠 Une application de quiz construite avec React qui récupère dynamiquement des questions depuis l'API Open Trivia DB.",
    "Trivia React Features": "🎯 Fonctions : sélection de catégorie, filtres de difficulté, suivi des scores et transitions fluides entre composants.",
    "Trivia React Skills": "🛠️ Gestion d'état avec React (useState/useEffect), structure des composants, passage de props et requêtes asynchrones.",
    "Trivia React Conclusion": "📚 Ce projet montre une maîtrise du frontend et un souci de l'UX dans un format de quiz engageant—parfait pour les amateurs de trivia !",
    "E-commerce API": "API de Commerce Électronique",
    "E-commerce API Description": "🛒 Une API RESTful backend créée pour une boutique fictive utilisant Python et FastAPI.",
    "E-commerce API Features": "⚙️ Prend en charge les produits, l'authentification des utilisateurs, le panier et la gestion des commandes.",
    "E-commerce API Skills": "🧰 Compétences démontrées en conception d'API, gestion des routes, interactions avec la base de données via SQLAlchemy et authentification sécurisée.",
    "E-commerce API Conclusion": "📦 Ce projet met en valeur des capacités backend complètes adaptées aux services web évolutifs.",
    "E-commerce Product Listing": "Liste de Produits E-commerce",
    "E-commerce Product Listing Description": "🛍️ Une application web élégante et ludique de liste de produits inspirée par Pokémon, construite avec HTML, CSS et JavaScript.",
    "E-commerce Product Listing Features": "🧾 Affiche une liste dynamique de Pokémon en tant que produits avec identifiants uniques, filtrage de recherche en temps réel et design responsive.",
    "E-commerce Product Listing Skills": "🎨 Met en avant la manipulation du DOM, l'intégration d'API asynchrone, les mises en page en grille et une UI/UX soignée.",
    "E-commerce Product Listing Conclusion": "📱 Un prototype e-commerce amusant et fonctionnel démontrant des techniques frontend pratiques sans frameworks.",
    "Marvel Character Explorer": "Explorateur de Personnages Marvel",
    "Marvel Character Explorer Description": "🦸 Une application web permettant d'explorer des informations sur les personnages de l'univers Marvel à l'aide de l'API Marvel.",
    "Marvel Character Explorer Features": "🧬 Recherche par nom de super-héros, navigation par cartes, détails des personnages et design réactif.",
    "Marvel Character Explorer Skills": "🛠️ Compétences démontrées : utilisation de l'API publique de Marvel, gestion des événements DOM, promesses et gestion des erreurs en JavaScript.",
    "Marvel Character Explorer Conclusion": "📚 Un projet idéal pour connecter le frontend à des API puissantes dans un univers familier et amusant.",
    "Event Center": "Centre d'Événements",
    "Event Center Description": "🎟️ Un projet multi-pages en HTML/CSS/JavaScript présentant un site web responsive pour un centre d'événements, avec navigation et formulaire.",
    "Event Center Features": "📋 Pages incluses : Accueil (avec bannière et À propos), Événements (avec détails structurés), Menu (tableau), Localisation (avec carte intégrée) et Contact (formulaire avec validation).",
    "Event Center Skills": "🛠️ Compétences démontrées : design responsive, HTML sémantique, mise en page Flexbox/Grid, validation de formulaire côté client, media queries et liens entre pages.",
    "Event Center Requirements": "✅ Exigences du projet remplies :",
    "Event Center Nav": "Barre de navigation sur toutes les pages",
    "Event Center Hero": "• Image principale, message de bienvenue et événements en vedette sur la page d'accueil",
    "Event Center Semantic": "• Utilisation de 'article' et 'section' pour les événements",
    "Event Center Menu": "• Menu sous forme de tableau avec catégories",
    "Event Center Map": "• Carte intégrée sur la page de localisation",
    "Event Center Form": "• Formulaire de contact validé",
    "Event Center Responsive": "• Mise en page responsive avec CSS grid/flexbox et effets au survol",
    "Event Center Conclusion": "📌 Un projet inspiré du monde réel axé sur l'organisation de la mise en page, la convivialité et la réactivité pour une expérience multipage.",
    "Advanced React E-commerce": "Advanced React E-commerce",
    "Advanced React E-commerce Intro": "🛍️ Une plateforme e-commerce robuste et évolutive construite avec React, Redux Toolkit, Firebase et TypeScript—conçue pour offrir une expérience d'achat fluide.",
    "Advanced React E-commerce Auth": "🔐 Authentification : Inscription/connexion sécurisée avec Firebase Authentication et gestion de session via Redux Toolkit.",
    "Advanced React E-commerce User": "👤 Gestion utilisateur : Modification et suppression du profil utilisateur avec synchronisation en temps réel via Firestore.",
    "Advanced React E-commerce Cart": "🛒 Panier intelligent : Panier interactif avec gestion dynamique des quantités et finalisation de commande via Firestore.",
    "Advanced React E-commerce Products": "📦 Gestion des produits et admin : Produits extraits de Firestore, avec options CRUD et importation depuis FakeStoreAPI.",
    "Advanced React E-commerce Orders": "🧾 Historique des commandes : Les utilisateurs peuvent consulter leurs commandes précédentes avec détails et transparence.",
    "Advanced React E-commerce Tech": "🛠️ Stack technique : React, Redux Toolkit, Firebase (Auth + Firestore), React Router, TypeScript, React Toastify.",
    "Task Manager App": "Task Manager App",
    "Task Manager App Intro": "✅ Un outil de productivité moderne construit avec React, TypeScript et Auth0—permettant aux utilisateurs de gérer efficacement leurs tâches.",
    "Task Manager App Core": "📋 Fonctionnalités principales : Tableau de bord avec filtres, tri, recherche, accès rapide aux détails et édition. Intégration Auth0 pour une gestion sécurisée.",
    "Task Manager App Model": "🗂️ Modèle de tâches avancé : Sous-tâches, récurrence, rappels, notes enrichies, et estimation du temps.",
    "Task Manager App Calendar": "📅 Calendrier interactif : Vue jour/semaine/mois avec glisser-déposer et création rapide de tâches via une fenêtre modale.",
    "Task Manager App UI": "🎨 UI/UX moderne : Conception mobile-first avec mode sombre, bouton +AddTask animé, validation de formulaire et CSS modulaire.",
    "Task Manager App Tech": "🛠️ Stack : React + Vite, TypeScript, Auth0, Context API, React Router, React Big Calendar.",
  },
  it: {
    "About Me": "👤 Chi sono",
    "Skills": "🛠️ Competenze",
    "Projects": "📂 Progetti",
    "See the Projects in Action": "🎥 Guarda i progetti in azione",
    "Contact": "📞 Contatto",
    "Feel free to reach out via:": "📬 Sentiti libero di contattarmi tramite:",
    "Email": "📧 Email",
    "GitHub": "🐙 GitHub",
    "LinkedIn": "🔗 LinkedIn",
    "American Translators Association": "📜 Associazione Americana Traduttori",
    "Software Developer": "💻 Sviluppatore di Software, traduttore e interprete",
    "Hi, I am @Daancoria": "👋 Ciao, sono @Daancoria",
    "I am interested in game development, Python projects, building interactive applications, and languages translation and interpretation.":
      "🎮 Sono interessato allo sviluppo di giochi, progetti in Python, creazione di applicazioni interattive e traduzione e interpretazione di lingue.",
    "Currently working on Pygame, Kivy, and state management for web applications, mobile apps, games and much more.":
      "💡 Attualmente sto lavorando su Pygame, Kivy e gestione dello stato per applicazioni web, app mobili, giochi e molto altro.",
    "Looking to collaborate on open-source game projects, quiz applications, and creative coding challenges.":
      "🤝 Cerco di collaborare a progetti di giochi open-source, applicazioni di quiz e sfide di programmazione creativa.",
    "Fun fact: I love building logic-based games, tweaking mechanics to make gameplay feel just right, and exploring new languages!":
      "🎲 Curiosità: Adoro creare giochi basati sulla logica, modificare le meccaniche per rendere il gameplay perfetto ed esplorare nuove lingue!",
    "Dungeon Crawler": "Esploratore di Dungeon",
    "Dungeon Crawler Description": "Sono entusiasta di presentare il mio gioco Dungeon Crawler, un'avventura retrò sviluppata interamente in Python usando Pygame.",
    "Dungeon Crawler Features": "⚔️ Esplora un labirinto generato proceduralmente pieno di tesori nascosti, muri distruttibili e nemici astuti.",
    "Dungeon Crawler Bombs": "💣 Scegli tra cinque diversi tipi di bombe, ognuna con una strategia unica.",
    "Dungeon Crawler Skills": "🛠️ Ho acquisito esperienza nella programmazione orientata agli oggetti, nel design di pixel art e nell'implementazione di IA.",
    "Dungeon Crawler Conclusion": "🎮 Se ami la grafica nostalgica combinata con l'ingegnosità moderna, questo progetto fa per te.",
    "Tetris": "Tetris",
    "Tetris Description": "Dopo essermi immerso nello sviluppo di giochi con Pygame/Kivy, ho creato un gioco classico di Tetris da zero!",
    "Tetris Skills Mastered": "💡 Competenze padroneggiate:",
    "Tetris Mechanics": "🔹 Meccaniche e logica del gioco – Implementazione del rilevamento delle collisioni, rotazione dei pezzi e meccaniche di pulizia delle linee.",
    "Tetris State Management": "🔹 Gestione degli stati – Gestione degli stati del gioco come esecuzione, pausa e condizioni di fine gioco.",
    "Tetris Procedural Generation": "🔹 Generazione procedurale – Pezzi di Tetrimino casuali garantendo un gioco equilibrato.",
    "Tetris Rendering": "🔹 Rendering e animazione – Transizioni fluide e movimento basato su griglia per un'esperienza coinvolgente.",
    "Tetris User Interaction": "🔹 Interazione dell'utente – Integrazione delle entrate da tastiera/mouse per un gioco reattivo.",
    "Tetris Optimization": "🔹 Ottimizzazione – Prestazioni fluide e codice strutturato per la scalabilità.",
    "Tetris Conclusion": "Questo progetto è stato una sfida entusiasmante e una grande aggiunta al mio portfolio di sviluppo di giochi.",
    "Flappy-ish Bird": "Flappy-ish Bird",
    "Flappy-ish Bird Description": "Sono entusiasta di condividere il mio progetto di sviluppo di giochi—Flappy-ish Bird, una versione divertente del classico Flappy Bird, costruito completamente con Python e Pygame!",
    "Flappy-ish Bird Skills Demonstrated": "🛠️ Competenze dimostrate:",
    "Flappy-ish Bird Physics": "✅ Sviluppo di giochi con Pygame – Implementazione della fisica, rilevamento delle collisioni e animazioni degli sprite.",
    "Flappy-ish Bird State Management": "✅ Gestione degli stati – Gestione degli stati del gioco, dei menu e delle entrate dell'utente.",
    "Flappy-ish Bird Randomization": "✅ Randomizzazione – Sfondi dinamici e colori dei tubi per un'esperienza fresca ogni volta.",
    "Flappy-ish Bird User Interaction": "✅ Interazione dell'utente – Un menu di selezione del colore dell'uccello per migliorare il coinvolgimento del giocatore.",
    "Flappy-ish Bird Optimization": "✅ Ottimizzazione delle prestazioni – Rendering efficiente e gioco fluido a 30 FPS.",
    "Flappy-ish Bird Features": "🖥️ Caratteristiche:",
    "Flappy-ish Bird Customization": "🎨 Selezione personalizzabile degli uccelli – Scegli tra uccelli rossi, blu o gialli.",
    "Flappy-ish Bird Dynamic Environments": "🌄 Ambienti dinamici – Gli sfondi cambiano tra giorno e notte casualmente.",
    "Flappy-ish Bird Pipe Variations": "🚧 Variazioni dei tubi – I tubi alternano tra verde e rosso.",
    "Flappy-ish Bird Gameplay": "🎮 Giocabilità classica di Flappy – Meccaniche semplici ma coinvolgenti.",
    "Sudoku": "Sudoku",
    "Sudoku Description": "Ho recentemente programmato un gioco di Sudoku in Python (usando Pygame) come progetto rapido per migliorare il mio pensiero logico/algoritmico e le abilità di gestione degli eventi in tempo reale.",
    "Sudoku Highlights": "Punti salienti:",
    "Sudoku Features": "• Puzzle generati automaticamente e un risolutore corrispondente.",
    "Sudoku Mistakes": "• Fino a 3 errori permessi (poi è game over!).",
    "Sudoku Pause": "• Pausa e ripresa facili – il timer si ferma durante la pausa.",
    "Sudoku Night Mode": "• Modalità notturna per sessioni notturne.",
    "Sudoku Hints": "• Suggerimenti e risoluzione automatica per quei punti difficili.",
    "Sudoku Difficulty": "• Cambia istantaneamente tra Facile, Medio e Difficile.",
    "Sudoku UI": "• Finestra ridimensionabile e UI adattiva.",
    "Python": "Python",
    "Pygame": "Pygame",
    "HTML/CSS": "HTML/CSS",
    "JavaScript": "JavaScript",
    "Git/GitHub": "Git/GitHub",
    "Game development": "Sviluppo di giochi",
    "Object-oriented programming": "Programmazione orientata agli oggetti",
    "Responsive design": "Design reattivo",
    "Problem-solving": "Risoluzione dei problemi",
    "English": "Inglese",
    "Spanish": "Spagnolo",
    "French": "Francese",
    "Italian": "Italiano",
    "See the Games in Action": "Guarda i giochi in azione",
    "Video Not Supported": "Il tuo browser non supporta il video.",
    "Footer": "© 2025 Daniel Anievas Coria",
    "Alien Invasion Game": "👾 Gioco di Invasione Aliena",
    "Alien Invasion Description": "🌌 Un emozionante gioco sparatutto spaziale in cui difendi la Terra da ondate di invasori alieni. Sviluppato con Python e Pygame.",
    "Alien Invasion Features": "🛸 Caratteristiche: Livelli progressivi, nemici dinamici e sistema di punteggio.",
    "Alien Invasion Skills": "🛠️ Competenze dimostrate: Programmazione orientata agli oggetti, progettazione di livelli e animazioni di sprite.",
    "Pokemon API Integration": "🎮 Integrazione API Pokémon",
    "Pokemon API Description": "🔍 Un'applicazione interattiva che utilizza l'API Pokémon per mostrare informazioni dettagliate sui tuoi Pokémon preferiti.",
    "Pokemon API Features": "📋 Caratteristiche: Ricerca per nome, statistiche dettagliate e interfaccia user-friendly.",
    "Pokemon API Skills": "🛠️ Competenze dimostrate: Consumo di API REST, gestione dei dati JSON e progettazione di interfacce dinamiche.",
    "Alien Invasion Smooth Controls": "Controlli fluidi della nave con movimento multidirezionale",
    "Alien Invasion Dynamic Fleet": "Una flotta aliena dinamica che reagisce ai bordi dello schermo",
    "Alien Invasion Bullet Firing": "Sparo di proiettili con limiti e rilevamento delle collisioni",
    "Alien Invasion Score System": "Tracciamento del punteggio e sistema di vite",
    "Alien Invasion Game States": "Stati del gioco: avvio, pausa, fine del gioco e riavvio",
    "Alien Invasion Custom Sprites": "Sprite personalizzati e sfondo per un aspetto rifinito",
    "Alien Invasion Tech Stack": "💻 Stack tecnologico:",
    "Alien Invasion Tech Details": "Python | Pygame | Design OOP",
    "Alien Invasion Conclusion": "🎯 Questa è stata una grande opportunità per approfondire i cicli di gioco, la gestione degli eventi, la gestione degli sprite e le meccaniche di collisione. Inoltre, implementare una base di codice modulare ha reso l'iterazione un piacere.",
    "Pokemon API Async": "JavaScript asincrono (async/await): Gestione fluida delle chiamate API e recupero dei dati con una gestione adeguata degli errori per garantire un'esperienza utente fluida.",
    "Pokemon API DOM Manipulation": "Manipolazione del DOM: Aggiornamento dinamico del contenuto della pagina senza ricariche utilizzando JavaScript nativo per creare un'interfaccia coinvolgente.",
    "Pokemon API Fetch": "Fetch API: Integrazione di fonti di dati di terze parti e gestione efficace delle risposte API.",
    "Pokemon API Clean Code": "Codice pulito e mantenibile: Enfasi su chiarezza, modularità e logica user-friendly per garantire leggibilità e scalabilità.",
    "Pokemon API Responsive Design": "Design web reattivo: Stilizzato con CSS per garantire usabilità su diverse dimensioni di schermo e dispositivi.",
    "Pokemon API Error Handling": "Feedback utente e gestione degli errori: Implementazione di messaggi significativi e stati di fallback per input non validi o errori nelle chiamate API.",
    "Pokemon API Final Note": "💡 È un ottimo esempio di come portare dati esterni in un'interfaccia elegante mantenendo prestazioni e usabilità in mente.",
    "Trivia with React": "Trivia con React",
    "Trivia React Description": "🧠 Un'applicazione trivia in stile quiz sviluppata con React che recupera dinamicamente le domande dall'API Open Trivia DB.",
    "Trivia React Features": "🎯 Funzionalità come selezione della categoria, filtri di difficoltà, tracciamento del punteggio e transizioni fluide dei componenti.",
    "Trivia React Skills": "🛠️ Gestione dello stato in React (useState/useEffect), struttura dei componenti, passaggio di props e recupero asincrono dei dati.",
    "Trivia React Conclusion": "📚 Questo progetto dimostra competenze frontend e attenzione all'esperienza utente in un formato quiz coinvolgente—perfetto per gli amanti della trivia!",
    "E-commerce API": "API per E-commerce",
    "E-commerce API Description": "🛒 Un'API RESTful backend costruita per un negozio fittizio usando Python e FastAPI.",
    "E-commerce API Features": "⚙️ Supporta elenchi di prodotti, autenticazione utenti, carrello e gestione ordini.",
    "E-commerce API Skills": "🧰 Competenze dimostrate nella progettazione di API, gestione delle route, interazione con il database tramite SQLAlchemy e autenticazione sicura.",
    "E-commerce API Conclusion": "📦 Questo progetto evidenzia capacità backend complete adatte a servizi web scalabili.",
    "E-commerce Product Listing": "Elenco Prodotti E-commerce",
    "E-commerce Product Listing Description": "🛍️ Un'app web elegante e giocosa di elenco prodotti ispirata ai Pokémon, costruita con HTML, CSS e JavaScript.",
    "E-commerce Product Listing Features": "🧾 Mostra un elenco dinamico di Pokémon come prodotti con ID unici, filtro di ricerca in tempo reale e layout responsive.",
    "E-commerce Product Listing Skills": "🎨 Mette in risalto la manipolazione del DOM, integrazione asincrona di API, layout a griglia e UI/UX pulita.",
    "E-commerce Product Listing Conclusion": "📱 Un prototipo e-commerce divertente e funzionale che dimostra tecniche pratiche di frontend senza l'uso di framework.",
    "Marvel Character Explorer": "Esploratore di Personaggi Marvel",
    "Marvel Character Explorer Description": "🦸 Un'applicazione web per esplorare informazioni sui personaggi dell'universo Marvel utilizzando l'API Marvel.",
    "Marvel Character Explorer Features": "🧬 Ricerca per nome di supereroe, navigazione tramite card, dettagli dei personaggi e design reattivo.",
    "Marvel Character Explorer Skills": "🛠️ Competenze dimostrate: uso dell'API pubblica Marvel, gestione eventi DOM, promesse e gestione errori in JavaScript.",
    "Marvel Character Explorer Conclusion": "📚 Un progetto ideale per chi vuole collegare il frontend ad API potenti in un ambiente divertente e familiare.",
    "Event Center": "Centro Eventi",
    "Event Center Description": "🎟️ Un progetto HTML/CSS/JavaScript multi-pagina che mostra un sito web responsive per un centro eventi, con navigazione e gestione dei moduli.",
    "Event Center Features": "📋 Pagine incluse: Home (con banner e Chi siamo), Eventi (con dettagli strutturati), Menù (tabella), Posizione (con mappa integrata) e Contatti (modulo con validazione).",
    "Event Center Skills": "🛠️ Competenze dimostrate: design responsive, HTML semantico, layout con Flexbox/Grid, validazione dei moduli lato client, media queries e collegamento tra pagine.",
    "Event Center Requirements": "✅ Requisiti del progetto soddisfatti:",
    "Event Center Nav": "Barra di navigazione in tutte le pagine",
    "Event Center Hero": "• Immagine hero, messaggio di benvenuto ed eventi in evidenza nella Home",
    "Event Center Semantic": "• Uso di 'article' e 'section' per gli eventi",
    "Event Center Menu": "• Menù in formato tabella con categorie",
    "Event Center Map": "• Mappa integrata nella pagina della posizione",
    "Event Center Form": "• Modulo di contatto validato",
    "Event Center Responsive": "• Layout responsive con CSS grid/flexbox ed effetti hover",
    "Event Center Conclusion": "📌 Un progetto ispirato al mondo reale incentrato sull'organizzazione del layout, l'usabilità e la reattività per un'esperienza multipagina.",
    "Advanced React E-commerce": "Advanced React E-commerce",
    "Advanced React E-commerce Intro": "🛍️ Una piattaforma e-commerce scalabile e robusta creata con React, Redux Toolkit, Firebase e TypeScript—pensata per offrire un'esperienza di acquisto fluida.",
    "Advanced React E-commerce Auth": "🔐 Autenticazione: Registrazione/login sicuro con Firebase Authentication e gestione delle sessioni con Redux Toolkit.",
    "Advanced React E-commerce User": "👤 Gestione utente: Modifica ed eliminazione del profilo con sincronizzazione in tempo reale su Firestore.",
    "Advanced React E-commerce Cart": "🛒 Carrello intelligente: Carrello interattivo con gestione dinamica delle quantità e checkout integrato con Firestore.",
    "Advanced React E-commerce Products": "📦 Controllo prodotti e amministrazione: Prodotti estratti da Firestore, funzionalità CRUD e importazione da FakeStoreAPI.",
    "Advanced React E-commerce Orders": "🧾 Cronologia ordini: Visualizzazione degli ordini precedenti con ID, data e riepilogo prodotti.",
    "Advanced React E-commerce Tech": "🛠️ Stack tecnologico: React, Redux Toolkit, Firebase (Auth + Firestore), React Router, TypeScript, React Toastify.",
    "Task Manager App": "Task Manager App",
    "Task Manager App Intro": "✅ Un'app di produttività moderna costruita con React, TypeScript e Auth0—pensata per aiutare gli utenti a gestire facilmente le proprie attività.",
    "Task Manager App Core": "📋 Funzionalità principali: Dashboard con filtri, ordinamento, ricerca, accesso rapido a dettagli e modifica. Integrazione Auth0 per sicurezza e personalizzazione.",
    "Task Manager App Model": "🗂️ Modello avanzato di attività: Sotto-attività, ricorrenze, promemoria, note dettagliate e stime di tempo.",
    "Task Manager App Calendar": "📅 Calendario interattivo: Vista per giorno/settimana/mese con drag-and-drop e creazione rapida via modale.",
    "Task Manager App UI": "🎨 UI/UX moderna: Layout mobile-first, modalità scura, pulsante +AddTask animato, validazione moduli e CSS modulare.",
    "Task Manager App Tech": "🛠️ Stack: React + Vite, TypeScript, Auth0, Context API, React Router, React Big Calendar.",
  },
};

function translatePage(language) {
  const elements = document.querySelectorAll("[data-translate]");
  elements.forEach((element) => {
    const key = element.getAttribute("data-translate");
    if (language === "en") {
      element.textContent = element.dataset.originalText || element.textContent;
    } else {
      if (!element.dataset.originalText) {
        element.dataset.originalText = element.textContent;
      }
      element.textContent = translations[language][key] || element.textContent;
    }
  });
}

document.getElementById("language").addEventListener("change", (event) => {
  const selectedLanguage = event.target.value;
  localStorage.setItem("selectedLanguage", selectedLanguage);
  translatePage(selectedLanguage);
});

document.addEventListener("DOMContentLoaded", () => {
  const dropdownToggle = document.querySelector(".dropdown-toggle");
  const dropdownMenu = document.querySelector(".dropdown-menu");

  dropdownToggle.addEventListener("click", () => {
    dropdownMenu.classList.toggle("active");
  });

  document.addEventListener("click", (event) => {
    if (!dropdownMenu.contains(event.target) && !dropdownToggle.contains(event.target)) {
      dropdownMenu.classList.remove("active");
    }
  });

  // Load saved language or default to English
  const savedLanguage = localStorage.getItem("selectedLanguage") || "en";
  document.getElementById("language").value = savedLanguage;
  translatePage(savedLanguage);
});

